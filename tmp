mire v2 fluxbox theme link
http://www.deviantart.com/?q=fluxbox#/art/Mire-v2-for-Fluxbox-45804697?_sid=37574c0b

http://www.webupd8.org/2010/07/7-of-best-ubuntu-terminal-fixed-width.html

dark gtk2 theme Ambiance Crunchy
http://gnome-look.org/content/show.php/Ambiance+Crunchy?content=151180

term color scheme
https://github.com/jwerle/terminal

terminal
https://github.com/Mayccoll/Elementary-OS-Terminal-Colors

LSCOLORS
https://github.com/thedanyaal/Terminal-Color-Scheme/blob/master/.bash_profile

OS X terminal color scheme
https://github.com/vladkozlovski/colorize-terminal

urxvt colorscheme

https://github.com/miroalgo/colours
https://github.com/stv-adr/Colorschemes
https://github.com/randalltuxarc/URxvt-colorscheme

zenburn colorscheme 
https://github.com/kode9/conf

color scheme generator
https://github.com/phaazon/colorscheme-gen

http://bastian.rieck.ru/blog/posts/2013/making_urxvt_beautiful/

https://bbs.archlinux.org/viewtopic.php?pid=1067552

https://wiki.archlinux.org/index.php/X_resources

# term color scheme designer 
http://ciembor.github.io/4bit/

SSD
vacume cleaner
books -> 
laptop ?
cell phone ?


http://www.dugukeji.com/jiankang/html/jiankangzhishixiecui/nanxing/20070427/189210.html
http://bbs.99js.com.cn/thread_19211028_7_31.html

==?1Q1UNAEPPFK4 acheng/toor
==HowT0=== wordpress


book page:
http://docstore.mik.ua/orelly/index.html


http://img2.ph.126.net/-NqrfTYi2uKhA2mtqRbXGg==/6630255226606398905.jpg
http://img0.ph.126.net/6zoGLZ5Vi5b84qu1Mg9rQA==/666251269892102037.jpg

戴风来 18136079232 huaian_dfl@126.com

xda mydigital
bsdplus alan

oracle -> chenghb@outlook.com -: Alan0203
ifix.net.cn -> bsdplus -> alan0203
nexus 5 blank screen on incoming calls:

Go to Settings >> Sounds and notification >> Interruptions 
You will see “When calls and notifications arrive” option >> Select “Always interrupt” (alternatively, select ‘allow priority interruptions only’). 
 Now from “Priority interruptions” >> Turn on “Calls”
 Reboot your device 
|Do a test call to see if you smarphone’s display turns on when receiving a call. 


option 2:
Settings >Apps >All. Scroll down until you find App called 'Google Dialer' - check that "show notifications" tick box is ticked.

2LCNHFJJ5NQS2

The solution provided here is made with the following assumtions:

I. NIC bonding has been chosen as the technology for NIC resiliency, other options (like NIC teaming) is not discussed
II. each server has two NICs and already connected to different swtiches
III. the focus of the solution is how to handle unexpected events or changes in NIC bonding, instead of how to configure it

============================

NIC bonding provides network fault tolerance for Linux systems, it can keep the system connected to network when one NIC goes down for any reason, by using another NIC. But, if both NICs stop working, a system still lose network connectivity and bonding won't be to help in such situation. Thus, means should be taken to ensure at least one NIC is functioning.

For NIC bonding to work properly, the following prereq have to be met:

1. bonding kernel module is loaded
2. bond interface is configured correctly and activated on system boot
3. at least one underlying NIC is functioning

If the number of servers is small, we could write a script to configure NIC bonding and check its status periodically. But with large number of servers, in a geographically distributed network, we need something more powerful.

With that in mind, here is my proposal to ensure NIC bonding: configure NIC bonding  and keep it in the desired state using Puppet.

Puppet is chosen because we can configure NIC bondingf with it, more importantly, once NIC bonding is defined, it can monitor the servers continually and bring things back to its desired state when changes happen. And it's a proven system that can handle things like this in scale.

From technical perspective, here are the things we need to configure to get NIC bonding working:

1. Load module bonding if not already loaded 
2. configure bond interface (or the master interface. referred to as bond0)
3. configure the underlying physical interface (or slave interfaces)
4. define state of both master and slave interfaces to be up

1. Load module bonding if not already loaded 
2. MII status of bond0 interface, and two bond slave interfaces
3. Carrier status of slave interfaces
4. network connectivity of bond0 interface
5. Link failure count of slave interfaces



References
[1] https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_network_bonding
